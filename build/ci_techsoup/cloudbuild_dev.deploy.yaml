# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: push-cdc-services
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - -c
      - |
        set -e
        git submodule foreach git pull origin master
        git submodule update --init --recursive
        
        mixer_rev="$(git rev-parse --short HEAD:mixer)"
        import_rev="$(git rev-parse --short HEAD:import)"
        image_label="${SHORT_SHA}-${mixer_rev}-${import_rev}"
        

        # Save the image label to a file for later use.
        echo "Image label: ${image_label}"
        echo $image_label > /workspace/image_label.txt

        # Bundle container with website, esp and mixer.
        docker build -f build/cdc_services/Dockerfile \
          --tag us-central1-docker.pkg.dev/${PROJECT_ID}/datacommons/cdc-services:${image_label} \
          --tag us-central1-docker.pkg.dev/${PROJECT_ID}/datacommons/cdc-services:latest \
          .
        docker push us-central1-docker.pkg.dev/${PROJECT_ID}/datacommons/cdc-services:${image_label}
        docker push us-central1-docker.pkg.dev/${PROJECT_ID}/datacommons/cdc-services:latest
    waitFor: ["-"]

  - id: deploy-cdc-services-to-cloud-run
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e
        # Read the image label from the file.
        image_label=$(cat /workspace/image_label.txt)
        
        # Use IFS (Internal Field Separator) to split the string by '-'.
        IFS='-' read -r WEBSITE_HASH MIXER_HASH  <<< "$image_label"
        
        gcloud run deploy datacommons-dev \
        --image us-central1-docker.pkg.dev/${PROJECT_ID}/datacommons/cdc-services:latest \
        --region us-central1 \
        --allow-unauthenticated \
        --memory 8G \
        --cpu 2 \
        --platform managed \
        --update-env-vars "WEBSITE_HASH=${WEBSITE_HASH},MIXER_HASH=${MIXER_HASH}"
    waitFor: ["push-cdc-services"]

#  - id: update version
#    name: "gcr.io/cloud-builders/git"
#    entrypoint: /bin/bash
#    args:
#      - -c
#      - |
#        set -e
#
#        git clone https://github.com/CaravanStudios/dc-website /tmp/deployment
#        cd /tmp/deployment
#        # Configure Git to create commits with Cloud Build's service account
#        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
#        git checkout $BRANCH_NAME
#        mkdir -p `dirname website/autopush/commit_hash.txt`
#        echo $SHORT_SHA > website/autopush/commit_hash.txt
#        git add website/autopush/commit_hash.txt
#        git commit -m "Deployed website to autopush at commit https://github.com/CaravanStudios/dc-website/commit/$SHORT_SHA"
#        git push origin $BRANCH_NAME
##    waitFor: ["push-web-compose"]
#    waitFor: ["-"]

timeout: 3600s

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_32"
